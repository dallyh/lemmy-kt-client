package dev.dallyh.lemmyktclient.api.v3.site.form

import dev.dallyh.lemmyktclient.api.v3.aliases.LanguageId
import dev.dallyh.lemmyktclient.api.v3.auth.RequireAuthentication
import dev.dallyh.lemmyktclient.api.v3.types.ListingType
import dev.dallyh.lemmyktclient.api.v3.types.RegistrationModeType
import kotlinx.serialization.Serializable

@Serializable
data class CreateSite(
    val name: String,
    val sidebar: String? = null,
    val description: String? = null,
    val icon: String? = null,
    val banner: String? = null,
    val enableDownvotes: Boolean? = null,
    val enableNsfw: Boolean? = null,
    val communityCreationAdminOnly: Boolean? = null,
    val requireEmailVerification: Boolean? = null,
    val applicationQuestion: String? = null,
    val privateInstance: Boolean? = null,
    val defaultTheme: String? = null,
    val defaultPostListingType: ListingType? /* "All" | "Local" | "Subscribed" */ = null,
    val legalInformation: String? = null,
    val applicationEmailAdmins: Boolean? = null,
    val hideModlogModNames: Boolean? = null,
    val discussionLanguages: List<LanguageId>? = null,
    val slurFilterRegex: String? = null,
    val actorNameMaxLength: Int? = null,
    val rateLimitMessage: Int? = null,
    val rateLimitMessagePerSecond: Int? = null,
    val rateLimitPost: Int? = null,
    val rateLimitPostPerSecond: Int? = null,
    val rateLimitRegister: Int? = null,
    val rateLimitRegisterPerSecond: Int? = null,
    val rateLimitImage: Int? = null,
    val rateLimitImagePerSecond: Int? = null,
    val rateLimitComment: Int? = null,
    val rateLimitCommentPerSecond: Int? = null,
    val rateLimitSearch: Int? = null,
    val rateLimitSearchPerSecond: Int? = null,
    val federationEnabled: Boolean? = null,
    val federationDebug: Boolean? = null,
    val federationWorkerCount: Int? = null,
    val captchaEnabled: Boolean? = null,
    val captchaDifficulty: String? = null,
    val allowedInstances: List<String>? = null,
    val blockedInstances: List<String>? = null,
    val taglines: List<String>? = null,
    val registrationMode: RegistrationModeType? /* "Closed" | "RequireApplication" | "Open" */ = null,
    override val auth: String,
) : RequireAuthentication

internal fun CreateSite.toParams() = mapOf(
    Pair("name", name),
    Pair("sidebar", sidebar),
    Pair("description", description),
    Pair("icon", icon),
    Pair("banner", banner),
    Pair("enable_downvotes", enableDownvotes?.toString()),
    Pair("enable_nsfw", enableNsfw?.toString()),
    Pair("community_creation_admin_only", communityCreationAdminOnly?.toString()),
    Pair("require_email_verification", requireEmailVerification?.toString()),
    Pair("application_question", applicationQuestion),
    Pair("private_instance", privateInstance?.toString()),
    Pair("default_theme", defaultTheme),
    Pair("default_post_listing_type", defaultPostListingType?.type),
    Pair("legal_information", legalInformation),
    Pair("application_email_admins", applicationEmailAdmins?.toString()),
    Pair("hide_modlog_mod_names", hideModlogModNames?.toString()),
    Pair("discussion_languages", discussionLanguages),
    Pair("slur_filter_regex", slurFilterRegex),
    Pair("actor_name_max_length", actorNameMaxLength?.toString()),
    Pair("rate_limit_message", rateLimitMessage?.toString()),
    Pair("rate_limit_message_per_second", rateLimitCommentPerSecond?.toString()),
    Pair("rate_limit_post", rateLimitPost?.toString()),
    Pair("rate_limit_post_per_second", rateLimitPostPerSecond?.toString()),
    Pair("rate_limit_register", rateLimitRegister?.toString()),
    Pair("rate_limit_register_per_second", rateLimitRegisterPerSecond?.toString()),
    Pair("rate_limit_image", rateLimitImage?.toString()),
    Pair("rate_limit_image_per_second", rateLimitImagePerSecond?.toString()),
    Pair("rate_limit_comment", rateLimitComment?.toString()),
    Pair("rate_limit_comment_per_second", rateLimitCommentPerSecond?.toString()),
    Pair("rate_limit_search", rateLimitSearch?.toString()),
    Pair("rate_limit_search_per_second", rateLimitSearchPerSecond?.toString()),
    Pair("federation_enabled", federationEnabled?.toString()),
    Pair("federation_debug", federationDebug?.toString()),
    Pair("federation_worker_count", federationWorkerCount?.toString()),
    Pair("captcha_enabled", captchaEnabled?.toString()),
    Pair("captcha_difficulty", captchaDifficulty),
    Pair("allowed_instances", allowedInstances),
    Pair("blocked_instances", blockedInstances),
    Pair("taglines", taglines),
    Pair("registration_mode", registrationMode?.type),
    Pair("auth", auth)
)
